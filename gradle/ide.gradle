apply plugin: 'eclipse'
apply plugin: 'idea'

eclipse {
    classpath {
        plusConfigurations += [configurations.testHelperCompile]
        plusConfigurations += [configurations.integrationTestCompile]
        plusConfigurations += [configurations.functionalTestCompile]

        // Eclipse does not distinguish source code dir from resource dir
        // anyway, functional tests are only executed with Gradle
        file.withXml { XmlProvider xml ->
            Node rootNode = xml.asNode()
            Node testProjectsCpe = xml.asNode().classpathentry.find { cpe -> cpe.@path == 'test-projects' }
            if (testProjectsCpe) {
                rootNode.remove(testProjectsCpe)
            }
        }
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.testHelper.allSource.srcDirs
        scopes.TEST.plus += [configurations.testHelperCompile]

        testSourceDirs += project.sourceSets.integrationTest.allSource.srcDirs
        scopes.TEST.plus += [configurations.integrationTestCompile]

        testSourceDirs += project.sourceSets.functionalTest.allSource.srcDirs
        scopes.TEST.plus += [configurations.functionalTestCompile]

        // IDEA does not distinguish source code dir from resource dir
        // anyway, functional tests are only executed with Gradle
        excludeDirs += file('test-projects')
    }
}

tasks.eclipse.dependsOn tasks.cleanEclipse
tasks.idea.dependsOn tasks.cleanIdea
