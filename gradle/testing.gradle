apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.7.9'
}

sourceSets {
    // Test helper classes use test dependencies
    testHelper {
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }

    // Test classes use test helper classes
    test {
        compileClasspath += sourceSets.testHelper.output
        runtimeClasspath += output + compileClasspath
    }

    integrationTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')
        compileClasspath += sourceSets.main.output + sourceSets.testHelper.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }

    functionalTest {
        groovy.srcDir file('src/functTest/groovy')
        resources.srcDir file('src/functTest/resources')
        compileClasspath += sourceSets.main.output + sourceSets.testHelper.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

test {
    jacoco {
        enabled = true
    }
}

task integrationTest(type: Test) {
    group = 'Verification'
    description = 'Runs the integration tests.'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter tasks.test
}

task functionalTest(type: Test) {
    group = 'Verification'
    description = 'Runs the functional tests.'

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath

    mustRunAfter tasks.test
    mustRunAfter tasks.integrationTest

    jacoco {
        enabled = false
    }
}

check.dependsOn integrationTest
check.dependsOn functionalTest

jacocoTestReport {
    reports {
        html.enabled true
    }
}
