/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 02 14:07:46 GMT 2017
 */

package com.github.cseppento.gradle.evosuite.testprojects.duckduckgo;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.cseppento.gradle.evosuite.testprojects.duckduckgo.DuckDuckGoAnswer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DuckDuckGoAnswer_ESTest extends DuckDuckGoAnswer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DuckDuckGoAnswer duckDuckGoAnswer0 = new DuckDuckGoAnswer((String) null, "J");
      String string0 = duckDuckGoAnswer0.getHeading();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DuckDuckGoAnswer duckDuckGoAnswer0 = new DuckDuckGoAnswer("&b\"9;OxUV9].>", "&b\"9;OxUV9].>");
      String string0 = duckDuckGoAnswer0.getHeading();
      assertEquals("&b\"9;OxUV9].>", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DuckDuckGoAnswer duckDuckGoAnswer0 = new DuckDuckGoAnswer("&b\"9;OxUV9].>", "&b\"9;OxUV9].>");
      String string0 = duckDuckGoAnswer0.getAbstractUrl();
      assertEquals("&b\"9;OxUV9].>", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DuckDuckGoAnswer duckDuckGoAnswer0 = new DuckDuckGoAnswer("", "");
      String string0 = duckDuckGoAnswer0.getAbstractUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DuckDuckGoAnswer duckDuckGoAnswer0 = new DuckDuckGoAnswer("", "");
      String string0 = duckDuckGoAnswer0.getHeading();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DuckDuckGoAnswer duckDuckGoAnswer0 = new DuckDuckGoAnswer("&b\"9;OxUV9].>", "&b\"9;OxUV9].>");
      String string0 = duckDuckGoAnswer0.toString();
      assertEquals("DuckDuckGoAnswer{heading=&b\"9;OxUV9].>, abstractUrl=&b\"9;OxUV9].>}", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DuckDuckGoAnswer duckDuckGoAnswer0 = new DuckDuckGoAnswer("", (String) null);
      String string0 = duckDuckGoAnswer0.getAbstractUrl();
      assertNull(string0);
  }
}
