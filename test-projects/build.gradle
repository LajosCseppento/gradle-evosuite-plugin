buildscript {
    File libsDir = file('../build/libs')
    List<File> candidates;

    if (libsDir.exists()) {
        candidates = libsDir.listFiles().findAll { File f ->
            f.name.startsWith('gradle-evosuite-plugin') && f.name.endsWith('.jar') &&
                    !f.name.endsWith('-javadoc.jar') && !f.name.endsWith('-sources.jar')
        }
    } else {
        candidates = []
    }

    if (candidates.size() == 1) {
        gradle.ext.evosuitePluginIsAvailable = true
        logger.quiet('Using localy built gradle-evosuite-plugin: {}', candidates[0].name)

        dependencies {
            classpath files(candidates[0])
        }
    } else {
        gradle.ext.evosuitePluginIsAvailable = false

        if (candidates.size() == 0) {
            logger.warn('The gradle-evosuite-plugin is not built, EvoSuite-related configuration is skipped')
        } else {
            throw new GradleException('Expected only one gradle-evosuite-plugin JAR, but found several: ' + candidates*.name)
        }
    }
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    project.group = 'com.github.cseppento.gradle.evosuite.test-projects'
    project.version = 'TEST'

    tasks.eclipse.dependsOn tasks.cleanEclipse
    tasks.idea.dependsOn tasks.cleanIdea
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'application'
    if (gradle.ext.evosuitePluginIsAvailable) {
        apply plugin: 'com.github.cseppento.evosuite'
    }

    repositories {
        mavenCentral()
    }

    apply from: "${project.name}-deps.gradle"
    apply from: "${project.name}-app.gradle"
}
